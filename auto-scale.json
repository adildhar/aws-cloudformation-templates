{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template will create the symfony backup instance.",
  "Parameters" : {
    "Landscape": {
      "Description": "Landscape deploying into, NonProd or Production",
      "Type": "String",
      "Default": "Production",
      "AllowedValues": ["NonProd", "Production"],
      "ConstraintDescription": "Must be one of: NonProd or Production"
    }
  },
  "Mappings": {
  "Production": {
    "ap-southeast-1": {
      "InstanceType": "t2.micro",
      "StackMinSize" : "1",
      "KeyName": "tradetracker-keypair",
      "VpcID": "vpc-cc4a81a8",
      "elbweb": "testing-webserver-ELB",
      "SNSTopic": "arn:aws:sns:ap-southeast-1:863346950657:tradetracker",
      "AvailabilityZone1": "ap-southeast-1a",
      "AvailabilityZone2": "ap-southeast-1b",
      "AmiID": "ami-1578d976",
      "VPCCoreSG": "sg-362f3352",
      "PriSubnet1": "subnet-63982015",
      "PriSubnet2": "subnet-272fa643"
    }
  }
  },
  "Conditions": {
    "isProduction": {
      "Fn::Equals": [{
        "Ref": "Landscape"
      },"Production"]
    }
  },
  "Resources": {
    "asgWebServer": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "VPCZoneIdentifier": [
          {"Fn::FindInMap": [{"Ref": "Landscape"},{"Ref": "AWS::Region"},"PriSubnet1"]},
          {"Fn::FindInMap": [{"Ref": "Landscape"},{"Ref": "AWS::Region"},"PriSubnet2"]}
        ],
        "AvailabilityZones": [
          {"Fn::FindInMap": [{"Ref": "Landscape"},{"Ref": "AWS::Region"},"AvailabilityZone1"]},
          {"Fn::FindInMap": [{"Ref": "Landscape"},{"Ref": "AWS::Region"},"AvailabilityZone2"]}
        ],
        "LaunchConfigurationName": {"Ref": "LaunchConfig"},
        "MinSize": "1",
        "MaxSize": "1",
        "Tags": [
          {"Key": "Name","Value": {"Ref": "AWS::StackName"},"PropagateAtLaunch":"true"}
        ],
        "LoadBalancerNames": [
                              {"Fn::FindInMap": [{"Ref": "Landscape"},{"Ref": "AWS::Region"},"elbweb"]}
                             ]   
     }},
    "asScaleUpPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "asgWebServer" },
        "Cooldown" : "60",
        "ScalingAdjustment" : "1"
      } },
    "asScaleDownPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "asgWebServer" },
        "Cooldown" : "60",
        "ScalingAdjustment" : "-1"
      } },
    "asCPUAlarmHigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "EvaluationPeriods": "1",
        "Statistic": "Average",
        "Threshold": "50",
        "AlarmDescription": "Alarm if CPU too high or metric disappears indicating instance is down",
        "Period": "60",
        "AlarmActions": [ 
          { "Ref": "asScaleUpPolicy" },
          {"Fn::FindInMap": [{"Ref": "Landscape"},{"Ref": "AWS::Region"},"SNSTopic"]}
        ],
       "Namespace": "AWS/EC2",
       "Dimensions": [ {
         "Name": "AutoScalingGroupName",
         "Value": { "Ref": "asgWebServer" }
        } ],
        "ComparisonOperator": "GreaterThanThreshold",
        "MetricName": "CPUUtilization"
      } },   
    "asCPUAlarmLow": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
         "EvaluationPeriods": "1",
         "Statistic": "Average",
          "Threshold": "20",
          "AlarmDescription": "Alarm if CPU too low so we can terminate some instances",
          "Period": "60",
          "AlarmActions": [ 
            { "Ref": "asScaleDownPolicy" },
            {"Fn::FindInMap": [{"Ref": "Landscape"},{"Ref": "AWS::Region"},"SNSTopic"]}
          ],
          "Namespace": "AWS/EC2",
          "Dimensions": [ {
            "Name": "AutoScalingGroupName",
            "Value": { "Ref": "asgWebServer" }
          }],
          "ComparisonOperator": "LessThanThreshold",
          "MetricName": "CPUUtilization"
      } },
    "EC2RecoveryAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
         "AlarmDescription": "Trigger a recovery when instance status check fails for 15 consecutive minutes.",
         "Namespace": "AWS/EC2" ,
         "MetricName": "StatusCheckFailed_System",
         "Statistic": "Minimum",
         "Period": "60",
         "EvaluationPeriods": "15",
         "ComparisonOperator": "GreaterThanThreshold",
         "Threshold": "0",
         "AlarmActions": [ {"Fn::Join" : ["", ["arn:aws:automate:", { "Ref" : "AWS::Region" }, ":ec2:recover" ]]} ],
         "Dimensions": [{"Name": "AutoScalingGroupName","Value": {"Ref": "asgWebServer"}}]
      } },
    "LaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": "false",
        "ImageId": {"Fn::FindInMap": [{"Ref": "Landscape"},{"Ref": "AWS::Region"},"AmiID"]},
        "KeyName": {"Fn::FindInMap": [{"Ref": "Landscape"},{"Ref": "AWS::Region"},"KeyName"] },
        "SecurityGroups" : [
        {"Fn::FindInMap": [{"Ref": "Landscape"},{"Ref": "AWS::Region"},"VPCCoreSG"]}
        ],
        "InstanceType": {"Fn::FindInMap": [{"Ref": "Landscape"},{"Ref": "AWS::Region"},"InstanceType" ]},
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["",[
          "#!/bin/bash","\n",
          "# git repo update", "\n",
          "/usr/bin/git --git-dir=/var/www/symfony/.git  --work-tree=/var/www/symfony pull -force"
        ]]}}
      }
    }
  },
"Outputs": {
}
}
